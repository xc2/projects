def use_npm_package_bin(proxy, name, version, integrity, entry_point, package = None, run_name = "bin", **kwargs):
    package = package or name
    proxy.npm_import(
        name = name,
        extra_build_content = "\n".join([
            """load("@aspect_rules_js//js:defs.bzl", "js_binary")""",
            "",
            """js_binary(""",
            """  name = "{}",""".format(run_name),
            """  data = [":package"],""",
            """  entry_point = ":package/{}",""".format(entry_point),
            """  copy_data_to_bin = False,""",
            """  visibility = ["//visibility:public"],""",
            """  chdir = "$$BUILD_WORKING_DIRECTORY",""",
            """)""",
            "",
        ]),
        # npm info <pkg>@<version> dist.integrity
        integrity = integrity,
        package = package,
        version = version,
        **kwargs
    )
    use_repo(proxy, name)

def use_node_modules(proxy, name, package = None, pnpm_lock = None, **kwargs):
    package = package or "//"
    pnpm_lock = pnpm_lock or "{}:pnpm-lock.yaml".format(package)
    proxy.npm_translate_lock(
        name = name,
        npmrc = "//:.npmrc",
        verify_node_modules_ignored = "//:.bazelignore",
        pnpm_lock = pnpm_lock,
        **kwargs
    )
    use_repo(proxy, name)

# https://bazel.build/rules/lib/globals/module
# https://registry.bazel.build
bazel_dep(name = "aspect_bazel_lib", version = "1.33.0")
bazel_dep(name = "aspect_rules_js", version = "1.30.0")
bazel_dep(name = "aspect_rules_swc", version = "1.0.2")
bazel_dep(name = "aspect_rules_ts", version = "1.4.5")
bazel_dep(name = "bazel_skylib", version = "1.4.2")

####### Node.js version #########
# By default you get the node version from DEFAULT_NODE_VERSION in @rules_nodejs//nodejs:repositories.bzl
# Optionally you can pin a different node version:
bazel_dep(name = "rules_nodejs", version = "6.0.0")
node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(node_version = "18.16.1")
use_repo(node, "nodejs")
#################################

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)

use_npm_package_bin(
    npm,
    name = "pnpm",
    integrity = "sha512-uMaWGXlvG+m5NIJaR4JEEenChbg+1AP4zVpqs4PEcZg4uH+lXMTd/X/lirKZA+TC0w0d+++y3btINcwyKsuwAA==",
    version = "8.6.0",
    entry_point = "dist/pnpm.cjs",
    run_name = "pnpm",
)

use_node_modules(npm, name = "npm")
use_node_modules(npm, name = "wrangler", package = "//tools/wrangler")
use_node_modules(npm, name = "lint", package = "//tools/lint")

################################################################################
# rules_ts
################################################################################

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)

rules_ts_ext.deps()

use_repo(rules_ts_ext, "npm_typescript")
